name: Build and Deploy to GKE

on:
  push:
    branches:
      - master  # Se ejecuta solo en la rama master

env:
  GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  GOOGLE_COMPUTE_ZONE: 'us-central1'
  GOOGLE_CLUSTER_NAME: 'spiderops-cluster-1'
  IMAGE_NAME: 'azure_test'
  IMAGE_TAG: ${{ github.sha }}

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate with Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Initialize Terraform
        run: |
          cd infra  # Asegúrate de que `main.tf` está en esta carpeta
          terraform init
      
      - name: Apply Terraform (Create GKE & Artifact Registry)
        run: |
          cd infra
          terraform apply -auto-approve


  build:
    runs-on: ubuntu-latest
    needs: infrastructure  # Espera a que termine la infraestructura
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate with Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/$GOOGLE_PROJECT_ID/my-repo/$IMAGE_NAME:$IMAGE_TAG .

      - name: Authenticate Docker to Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Push Docker image to Artifact Registry
        run: |
          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT_ID/my-repo/$IMAGE_NAME:$IMAGE_TAG

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          install_components: 'kubectl'

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials $GOOGLE_CLUSTER_NAME --zone $GOOGLE_COMPUTE_ZONE --project $GOOGLE_PROJECT_ID

      - name: Deploy to GKE
        run: |
          kubectl apply -f resources.yaml

      - name: Update Deployment with new image
        run: |
          kubectl set image deployment/my-app-deployment my-container=us-central1-docker.pkg.dev/$GOOGLE_PROJECT_ID/my-repo/$IMAGE_NAME:$IMAGE_TAG
          kubectl rollout status deployment/my-app-deployment
